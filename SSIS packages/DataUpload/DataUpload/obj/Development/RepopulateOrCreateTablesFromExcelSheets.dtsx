<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="6/30/2018 7:23:27 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="AJAY"
  DTS:CreatorName="AJAY\Ajay"
  DTS:DTSID="{FA82856E-495A-4E56-9EC4-A6AB68BC0BB9}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="14.0.3008.28"
  DTS:LocaleID="16393"
  DTS:ObjectName="RepopulateOrCreateTablesFromExcelSheets"
  DTS:PackageType="5"
  DTS:ProtectionLevel="0"
  DTS:VersionBuild="47"
  DTS:VersionGUID="{DBF40775-E096-4323-9BD4-6C2D2B762BED}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[OLEDBConnection]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{AD2B27E8-333A-45EC-B604-883A1BE14CA4}"
      DTS:ObjectName="OLEDBConnection">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">"Data Source="+@[User::ServerName]+";User ID="+@[User::LoginName]+";Password="+@[User::LoginPassword]+";Initial Catalog="+@[User::DatabaseName]+";Application Name=SSIS-CreatePopulateTablesFromExcelSheets-{AD2B27E8-333A-45EC-B604-883A1BE14CA4}"+@[User::ServerName]+"."+@[User::DatabaseName]+"."+@[User::LoginName]+";"</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=131.156.33.147;User ID=sa;Initial Catalog=60by25Development;Application Name=SSIS-CreatePopulateTablesFromExcelSheets-{AD2B27E8-333A-45EC-B604-883A1BE14CA4}131.156.33.147.60by25Development.sa;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"></DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3BAD4C5B-07EE-497F-8A25-9B01F6708ECF}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::ArchiveFolderPath]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ArchiveFolderPath">
      <DTS:VariableValue
        DTS:DataType="8">C:\CSCI course docs\CGS\Archive</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{55145AE1-D08D-4E9D-8401-C0ECBC6617B6}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::BackUpSchemaName]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="BackUpSchemaName">
      <DTS:VariableValue
        DTS:DataType="8">archive</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5CCB07E6-CB32-4560-90DD-A6903DAA837D}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::DatabaseName]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DatabaseName">
      <DTS:VariableValue
        DTS:DataType="8">60by25Development</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{05A949AE-592C-43A9-99BC-4026AEB8AA34}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::ErrorLogFolderPath]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ErrorLogFolderPath">
      <DTS:VariableValue
        DTS:DataType="8">C:\CSCI course docs\CGS\ErrorLog</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{18D0E5B8-06AA-4A16-9060-28AD7A297081}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::LogFolderPath]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="LogFolderPath">
      <DTS:VariableValue
        DTS:DataType="8">C:\CSCI course docs\CGS\Log</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9AB8E85D-3564-475D-8962-D10E53447EA5}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::LoginName]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="LoginName">
      <DTS:VariableValue
        DTS:DataType="8">sa</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8CCC32EF-7E5F-492E-9233-88E00C6750B7}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::LoginPassword]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="LoginPassword">
      <DTS:VariableValue
        DTS:DataType="8">cgstestSQL2013</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D0F73045-2656-41A8-8EED-40ADF7121437}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::RepopulateSourceFolderPath]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="RepopulateSourceFolderPath">
      <DTS:VariableValue
        DTS:DataType="8">C:\CSCI course docs\CGS\DummyFolderForSSIS</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{354B1FEA-09C7-4F46-B989-0158E83AC16F}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::SchemaName]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SchemaName">
      <DTS:VariableValue
        DTS:DataType="8">dbo</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EC35CA3C-0DD5-4DA5-9997-8D2C69E288F7}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::ServerName]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ServerName">
      <DTS:VariableValue
        DTS:DataType="8">131.156.33.147</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Script Task"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{D936A7CD-0634-4F94-8B90-1A45CC5AC1F6}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_c6e77ca524b04c1f9b35fd5ba4b271bf"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::ArchiveFolderPath,User::BackUpSchemaName,User::ErrorLogFolderPath,User::LogFolderPath,System::PackageName,User::RepopulateSourceFolderPath,User::SchemaName,System::UserName">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ST_c6e77ca524b04c1f9b35fd5ba4b271bf.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{7710FA30-79AA-497B-AEA8-2565E87EFB31}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_c6e77ca524b04c1f9b35fd5ba4b271bf</RootNamespace>
    <AssemblyName>ST_c6e77ca524b04c1f9b35fd5ba4b271bf</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[ using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using System.Data.OleDb;
using System.Data.SqlClient;
using System.Text;

namespace ST_c6e77ca524b04c1f9b35fd5ba4b271bf
{
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
		public void Main()
		{
            try
            {
                String sourceFolderPath = Dts.Variables["User::RepopulateSourceFolderPath"].Value.ToString();
                String schemaName = Dts.Variables["User::SchemaName"].Value.ToString();
                String backUpSchemaName = Dts.Variables["User::BackUpSchemaName"].Value.ToString();
                String userName = Dts.Variables["System::UserName"].Value.ToString();
                String archiveFolderPath = Dts.Variables["User::ArchiveFolderPath"].Value.ToString();
                String packageName = Dts.Variables["System::PackageName"].Value.ToString();
                String logFolderPath = Dts.Variables["User::LogFolderPath"].Value.ToString();

                var directory = new DirectoryInfo(sourceFolderPath);
                FileInfo[] files = directory.GetFiles();
                string fileFullPath = "", fileExtension = "", filename = "";
                string logTime = DateTime.Now.ToString("yyyyMMddHHmmss");
                StreamWriter streamWriter = File.CreateText(logFolderPath + "\\" + packageName + "_$" + logTime + ".log");

                streamWriter.WriteLine("The package - " + packageName + ", is working on the folder - " + directory.Name);
                foreach (FileInfo file in files)
                {
                    if (file.Name.Contains(".xlsx")) { filename = file.Name.Replace(".xlsx", ""); fileExtension = ".xlsx"; }
                    else if (file.Name.Contains(".xls")) { filename = file.Name.Replace(".xls", ""); fileExtension = ".xls"; }
                    else continue;
                    
                    fileFullPath = sourceFolderPath + "\\" + file.Name;

                    string connectionStringWithoutExcelDataType = "Provider=Microsoft.ACE.OLEDB.12.0;Data Source=" + fileFullPath + ";Extended Properties=\"Excel 12.0;HDR=YES;IMEX=1\"";
                    OleDbConnection oleDbConnectionWithoutExcelDataType = new OleDbConnection(connectionStringWithoutExcelDataType);

                    oleDbConnectionWithoutExcelDataType.Open();
                    DataTable dataTableWithEachSheetInfo = oleDbConnectionWithoutExcelDataType.GetOleDbSchemaTable(OleDbSchemaGuid.Tables, null);
                    oleDbConnectionWithoutExcelDataType.Close();

                    streamWriter.WriteLine("The current file is: " + file.Name);

                    string sheetname = "";
                    foreach (DataRow dataRowWithCurrentSheetInfo in dataTableWithEachSheetInfo.Rows)
                    {
                        if (dataRowWithCurrentSheetInfo["TABLE_NAME"].ToString().Contains("_FilterDatabase")) continue;
                        if (dataRowWithCurrentSheetInfo["TABLE_NAME"].ToString().Contains("$"))
                        {
                            sheetname = dataRowWithCurrentSheetInfo["TABLE_NAME"].ToString().Replace("$", "");

                            streamWriter.WriteLine("The current sheet is: " + sheetname);

                            SqlConnection sqlConnection = new SqlConnection();
                            sqlConnection = (SqlConnection)(Dts.Connections["OLEDBConnection"].AcquireConnection(Dts.Transaction) as SqlConnection);

                            SqlCommand sqlCommand = sqlConnection.CreateCommand();
                            string checkTableAvailabilityQuery = "SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[" + schemaName + "].[" + sheetname + "]')  AND type in (N'U')";
                            sqlCommand.CommandText = checkTableAvailabilityQuery;
                            string resultOfTableAvailabilityCheck = "";
                            resultOfTableAvailabilityCheck = (string)sqlCommand.ExecuteScalar();

                            if (resultOfTableAvailabilityCheck !=null && resultOfTableAvailabilityCheck.Length != 0)
                            {
                                streamWriter.WriteLine("--> The table [" + schemaName +"].[" + sheetname + "] already exists!");
                                StringBuilder clearExistingTableQuery = new StringBuilder();
                                clearExistingTableQuery.Append("IF(NOT EXISTS(SELECT * FROM sys.schemas WHERE name = '" + backUpSchemaName + "')) ");
                                clearExistingTableQuery.Append("BEGIN EXEC('CREATE SCHEMA [" + backUpSchemaName + "] AUTHORIZATION [" + userName + "]') END ");
                                clearExistingTableQuery.Append("SELECT * INTO [" + backUpSchemaName + "].[" + sheetname + "_$" + DateTime.Now.ToString("yyyyMMddHHmmss") + "] FROM [" + schemaName + "].[" + sheetname + "]; ");
                                clearExistingTableQuery.Append("DELETE FROM [" + schemaName + "].[" + sheetname + "]; ");

                                oleDbConnectionWithoutExcelDataType.Open();
                                OleDbCommand oleDbCommandForColumnNames = new OleDbCommand("select top 1 * from [" + sheetname + "$]", oleDbConnectionWithoutExcelDataType);
                                OleDbDataAdapter oleDbDataAdapterForColumnNames = new OleDbDataAdapter(oleDbCommandForColumnNames);
                                DataTable dataTableForColumnNames = new DataTable();
                                oleDbDataAdapterForColumnNames.Fill(dataTableForColumnNames);
                                oleDbConnectionWithoutExcelDataType.Close();

                                StringBuilder excelHeaderColumn = new StringBuilder();
                                int i;
                                for (i = 0; i < dataTableForColumnNames.Columns.Count - 1; i++)
                                    excelHeaderColumn.Append("'" + dataTableForColumnNames.Columns[i].ColumnName + "'" + ",");
                                excelHeaderColumn.Append("'" + dataTableForColumnNames.Columns[i].ColumnName + "'");

                                streamWriter.WriteLine("b) Actual columns in current excel sheet: " + excelHeaderColumn.ToString());

                                string queryToGetMatchingColumns = "SELECT STUFF((SELECT  ',['+Column_Name+']' FROM Information_schema.Columns WHERE Table_Name='" +
                                    sheetname + "' AND Table_SChema='" + schemaName + "'" +
                                    "AND Column_Name IN (" + @excelHeaderColumn.ToString() + ") for xml path('')),1,1,'') AS ColumnList";
                                sqlCommand.CommandText = queryToGetMatchingColumns;
                                string matchedColumnsList = (string)sqlCommand.ExecuteScalar();
                                streamWriter.WriteLine("c) Matching columns with the existing table: " + matchedColumnsList);

                                SqlCommand clearExistingTableCommand = new SqlCommand(clearExistingTableQuery.ToString(), sqlConnection);
                                clearExistingTableCommand.ExecuteNonQuery();
                                streamWriter.WriteLine("--> Existing table is copied to the schema - " + backUpSchemaName);
                                streamWriter.WriteLine("--> Existing table's data are deleted from the schema - " + schemaName);

                                oleDbConnectionWithoutExcelDataType.Open();
                                OleDbCommand oleDbCommandForMatchedColumnsDataFromExcel = new OleDbCommand("select " + matchedColumnsList + " from [" + sheetname + "$]", oleDbConnectionWithoutExcelDataType);
                                OleDbDataAdapter oleDbDataAdapterForMatchedColumnsData = new OleDbDataAdapter(oleDbCommandForMatchedColumnsDataFromExcel);
                                DataTable dataTableWithMatchedColumnsData = new DataTable();
                                oleDbDataAdapterForMatchedColumnsData.Fill(dataTableWithMatchedColumnsData);
                                oleDbConnectionWithoutExcelDataType.Close();

                                using (SqlBulkCopy sqlBulkCopy = new SqlBulkCopy(sqlConnection))
                                {
                                    sqlBulkCopy.DestinationTableName = schemaName + "." + sheetname;
                                    foreach (var column in dataTableWithMatchedColumnsData.Columns)
                                        sqlBulkCopy.ColumnMappings.Add(column.ToString(), column.ToString());
                                    sqlBulkCopy.WriteToServer(dataTableWithMatchedColumnsData);
                                }
                                streamWriter.WriteLine("--> All the rows under above mentioned columns, from the sheet " + sheetname + ", were copied to the table " + "[" + schemaName + "].[" + sheetname + "]");
                            }
                            else
                            {
                                streamWriter.WriteLine("a) The table doesn't exist in the schema - " + schemaName);
                                oleDbConnectionWithoutExcelDataType.Open();
                                OleDbCommand oleDbCommandForAllDataFromExcel = new OleDbCommand("select * from [" + sheetname + "$]", oleDbConnectionWithoutExcelDataType);
                                OleDbDataAdapter oleDbDataAdapterForAllDataFromExcel = new OleDbDataAdapter(oleDbCommandForAllDataFromExcel);
                                DataTable dataTableForAllDataFromExcel = new DataTable();
                                oleDbDataAdapterForAllDataFromExcel.Fill(dataTableForAllDataFromExcel);
                                oleDbConnectionWithoutExcelDataType.Close();

                                StringBuilder createNewTableQuery = new StringBuilder();
                                createNewTableQuery.Append("Create table [" + schemaName + "].[" + sheetname + "]");
                                createNewTableQuery.Append("(");
                                int k = 0;
                                for (k = 0; k < dataTableForAllDataFromExcel.Columns.Count - 1; k++)
                                    createNewTableQuery.Append("[" + dataTableForAllDataFromExcel.Columns[k].ColumnName + "] nvarchar(max),");
                                createNewTableQuery.Append("[" + dataTableForAllDataFromExcel.Columns[k].ColumnName + "] nvarchar(max)");
                                createNewTableQuery.Append(");");

                                SqlCommand createNewTableCommand = new SqlCommand(createNewTableQuery.ToString(), sqlConnection);
                                createNewTableCommand.ExecuteNonQuery();

                                streamWriter.WriteLine("--> A new table is created with all it's columns as nvarchar(max) - [" + schemaName + "].[" + sheetname + "]");

                                using (SqlBulkCopy sqlBulkCopy = new SqlBulkCopy(sqlConnection))
                                {
                                    sqlBulkCopy.DestinationTableName = "[" + schemaName + "].[" + sheetname + "]";
                                    sqlBulkCopy.WriteToServer(dataTableForAllDataFromExcel);
                                }
                                streamWriter.WriteLine("--> All the rows from the sheet - " + sheetname + ", are copied to the table - [" + schemaName + "].[" + sheetname + "]");
                            }
                        }
                        streamWriter.WriteLine(); streamWriter.WriteLine();
                    }
                    streamWriter.WriteLine(); streamWriter.WriteLine(); 
                    File.Move(fileFullPath, archiveFolderPath + "\\" + (file.Name.Replace(sourceFolderPath, "")).Replace(fileExtension, "") + "_$" + DateTime.Now.ToString("yyyyMMddHHmmss") + fileExtension);
                }
                streamWriter.Close();
                Dts.TaskResult = (int)Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success;
            }

            catch (Exception exception)
            {
                using (StreamWriter sw = File.CreateText(Dts.Variables["User::ErrorLogFolderPath"].Value.ToString()
                    + "\\" + "ErrorLog_" + DateTime.Now.ToString("yyyyMMddHHmmss") + ".log"))
                {
                    sw.WriteLine("Help link for this exception: "+exception.HelpLink);
                    sw.WriteLine("Primary exception: " + exception.InnerException);
                    sw.WriteLine("Exception Message: " + exception.Message);
                    sw.WriteLine("Error Source: " + exception.Source);
                    sw.WriteLine("Current method which throws exception: " + exception.TargetSite);
                    sw.WriteLine("Code trace at the error point: ");
                    sw.WriteLine(exception.StackTrace);
                    Dts.TaskResult = (int)Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure;
                }
            }
        }
	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_c6e77ca524b04c1f9b35fd5ba4b271bf</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_c6e77ca524b04c1f9b35fd5ba4b271bf</msb:DisplayName>
		<msb:ProjectId>{24C320D1-95F8-4591-9A00-80B600AD38E7}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_c6e77ca524b04c1f9b35fd5ba4b271bf.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c6e77ca524b04c1f9b35fd5ba4b271bf.Properties.Settings.get_Default():ST_c6e77ca524b04c1f9b35fd5ba4b271bf.Properties.Sett" +
    "ings")]

namespace ST_c6e77ca524b04c1f9b35fd5ba4b271bf.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_c6e77ca524b04c1f9b35fd5ba4b271bf")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_c6e77ca524b04c1f9b35fd5ba4b271bf")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c6e77ca524b04c1f9b35fd5ba4b271bf.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c6e77ca524b04c1f9b35fd5ba4b271bf.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c6e77ca524b04c1f9b35fd5ba4b271bf.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_c6e77ca524b04c1f9b35fd5ba4b271bf.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_c6e77ca524b04c1f9b35fd5ba4b271bf.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_c6e77ca524b04c1f9b35fd5ba4b271bf.dll">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
czcAAApzOAAAChMaERpvOQAACiYREW8lAAAKczQAAAoTGxYTHCswERtyqwUAcBEabzoAAAoRHG87
AAAKbzwAAApyrwUAcCggAAAKbzUAAAomERwXWBMcERwRGm86AAAKbz0AAAoXWTK+ERtyqwUAcBEa
bzoAAAoRHG87AAAKbzwAAApyqwUAcCggAAAKbzUAAAomEQxytQUAcBEbbxQAAAooJgAACm8dAAAK
HY0oAAABJRZyCwYAcKIlFxESoiUYcsgGAHCiJRkHoiUacvIGAHCiJRsRG28UAAAKoiUcch4HAHCi
KBkAAAoTHREWER1vMQAAChEWbzIAAAp0KAAAARMeEQxycgcAcBEeKCYAAApvHQAAChEZbxQAAAoR
FXM+AAAKbz8AAAomEQxyzgcAcAgoJgAACm8dAAAKEQxyKggAcAcoJgAACm8dAAAKERFvIgAAChuN
KAAAASUWcpwIAHCiJRcRHqIlGHKsCABwoiUZERKiJRpypQUAcKIoGQAAChERczYAAApzNwAACnM4
AAAKEx8RH285AAAKJhERbyUAAAoRFXNAAAAKEyARIAdyvAgAcBESKCAAAApvQQAAChEfbzoAAApv
KAAAChMhKyQRIW8pAAAKEyIRIG9CAAAKESJvFAAAChEibxQAAApvQwAACiYRIW9EAAAKLdPeFREh
dRwAAAETIxEjLAcRI29FAAAK3BEgER9vRgAACt4MESAsBxEgb0UAAArcEQwdjSgAAAElFnLACABw
oiUXERKiJRhyQAkAcKIlGQeiJRpywQMAcKIlGxESoiUccnoJAHCiKBkAAApvHQAACjjvAQAAEQxy
fgkAcAcoJgAACm8dAAAKERFvIgAACnLWCQBwERJypQUAcCggAAAKERFzNgAACnM3AAAKczgAAAoT
JBEkbzkAAAomERFvJQAACnM0AAAKEyURJRuNKAAAASUWcvYJAHCiJRcHoiUYcsEDAHCiJRkREqIl
GnJ6CQBwoigZAAAKbzUAAAomESVyFAoAcG81AAAKJhYTJhYTJiswESVyGAoAcBEkbzoAAAoRJm87
AAAKbzwAAApyHAoAcCggAAAKbzUAAAomESYXWBMmESYRJG86AAAKbz0AAAoXWTK+ESVyGAoAcBEk
bzoAAAoRJm87AAAKbzwAAApyPgoAcCggAAAKbzUAAAomESVyXgoAcG81AAAKJhElbxQAAAoRFXM+
AAAKbz8AAAomEQwbjSgAAAElFnJkCgBwoiUXB6IlGHLBAwBwoiUZERKiJRpyegkAcKIoGQAACm8d
AAAKERVzQAAAChMnEScbjSgAAAElFnIYCgBwoiUXB6IlGHLBAwBwoiUZERKiJRpyegkAcKIoGQAA
Cm9BAAAKEScRJG9GAAAK3gwRJywHESdvRQAACtwRDB2NKAAAASUWcvEKAHCiJRcREqIlGHI3CwBw
oiUZB6IlGnLBAwBwoiUbERKiJRxyegkAcKIoGQAACm8dAAAKEQxvRwAAChEMb0cAAAoRE29EAAAK
OiP5///eFRETdRwAAAETIxEjLAcRI29FAAAK3BEMb0cAAAoRDG9HAAAKEQkcjSgAAAElFhEEoiUX
clUBAHCiJRgREG8bAAAKBnI1AQBwbx8AAAoRCnI1AQBwbx8AAAqiJRlyWQEAcKIlGigXAAAKEw0S
DXI3AQBwKBgAAAqiJRsRCqIoGQAACihIAAAKEQ8XWBMPEQ8RDo5pP6X3//8RDG9JAAAKAigQAAAK
Fm9KAAAK3fgAAAATKAIoEAAACm8RAAAKcnMLAHBvEgAACm8TAAAKbxQAAApypQsAcCgXAAAKEw0S
DXI3AQBwKBgAAApyXwEAcCgcAAAKKBoAAAoTKREpcrsLAHARKG9LAAAKKCYAAApvHQAAChEpcvkL
AHARKG9MAAAKKE0AAApvHQAAChEpciEMAHARKG9OAAAKKCYAAApvHQAAChEpckkMAHARKG9PAAAK
KCYAAApvHQAAChEpcmcMAHARKG9QAAAKKE0AAApvHQAAChEpcrcMAHBvHQAAChEpEShvUQAACm8d
AAAKAigQAAAKF29KAAAK3gwRKSwHESlvRQAACtzeACoAQZQAAAIAAACSBgAAMQAAAMMGAAAVAAAA
AAAAAAIAAABwBgAAcwAAAOMGAAAMAAAAAAAAAAIAAACZCAAAPgAAANcIAAAMAAAAAAAAAAIAAABb
AgAA5AYAAD8JAAAVAAAAAAAAAAIAAAA4CgAAoAAAANgKAAAMAAAAAAAAAAAAAAAAAAAA7gkAAO4J
AAD4AAAAHQAAAR4CKFIAAAoqHgIoUwAACiqufgEAAAQtHnL3DABw0AMAAAIoVAAACm9VAAAKc1YA
AAqAAQAABH4BAAAEKhp+AgAABCoeAoACAAAEKhp+AwAABCoeAihXAAAKKi5zCAAABoADAAAEKgAA
QlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAyAUAACN+AAA0BgAAEAkAACNTdHJp
bmdzAAAAAEQPAABsDQAAI1VTALAcAAAQAAAAI0dVSUQAAADAHAAAfAIAACNCbG9iAAAAAAAAAAIA
AAFXFaIBCQEAAAD6ATMAFgAAAQAAAD4AAAAEAAAAAwAAAAkAAAABAAAAVwAAABAAAAABAAAAAgAA
AAMAAAAEAAAAAQAAAAUAAAABAAAAAADoBAEAAAAAAAYAPgMdBwYAzQMdBwYAigIKBw8AkQcAAAYA
twKGBQYAIQOGBQYAAgOGBQYAtAOGBQYAXgOGBQYAdwOGBQYAzgKGBQYA6QIkBAoAkgOXBAoA0QGX
BAYAXAYKAAYAOAYKAAYArAYKAAYAZgEeBQ4A4gU/AAYA4wYeCA4A3wgzAA4ABAZ7CA4AiQB7CAYA
eAawCA4A7QAzAA4A9Ah7CAYAWQgeBQYAAAEeBQYAGwYeBQYAbQIKBwYAigY9BwYAQQZhBRIALgLS
BBIAngLSBBIACAJMBQYAUgIdBwoAwASXBBYA2gdvARYA9wBvAQYAWQQeBQYAMAEKAAYATQYKAAYA
uQYKAA4A5QUlBg4AXgA/AAYAaQAeBQ4A0AUzAA4A7QEzABYANQhvARYAmgZvAQ4AcQAlBg4AbgA/
AA4AxAY/AA4AxwYlBg4AuwUzAA4AQQUzAA4AmAV7CA4APgR7CAYAxgGGBQYAmQEeBQYADAEeBQYA
6wiGBQAAAAABAAAAAAABAAEAAQAQADYFAAQ5AAEAAQAAABAARAegB20AAQADAAABEAAACKAHjQAD
AAcAEQAlBX8BEQC2AYMBEQCyAIgBUCAAAAAAhgA8BQYAAQDYKwAAAACGGP0GBgABAOArAAAAAIMY
/QYGAAEA6CsAAAAAkwiGBowBAQAULAAAAACTCJ4BkQEBABssAAAAAJMIqgGXAQEAIywAAAAAlghg
CJ4BAgAqLAAAAACGGP0GBgACADIsAAAAAJEYAwejAQIAAAABAPUDCQD9BgEAEQD9BgYAGQD9BgoA
KQD9BhAAMQD9BhAAOQD9BhAAQQD9BhAASQD9BhAAUQD9BhAAWQD9BhAAYQD9BhAAaQD9BgYA8QD9
BgYAEQH9BhUAIQH9BgYAcQBBCGIAKQHWB2gAMQEVBW4AOQHrA3UA2QBXBHkAeQD9BhAAeQDkB30A
kQDXCIMAkQBXBIgAQQFSCI0ASQHMCJMAUQE1AXkAQQFSCJkAWQGPARAAQQEJCKEAQQGbAKYAQQFS
CKwAmQD9BhAAYQExBQYAaQHPB7MAmQDZALgAYQEgAgYAQQFSCMIAyQBJCMgAgQHvBs4AoQCRCHUA
qQAVBdMAsQD9BgYAKQExCNgAiQEVBd4AKQF2BXUAkQHyBeUAsQB7AOoAmQG8CBAAmQFqBnUAQQFg
BO8AwQD9BgYAwQCUAPMAoQH9BvkAqQH9BgAByQD9BgYAsQEQBQcByQASCA0BuQEVBRMBwQFXAXkA
gQGdCO8AuQD9BhoBmQEACe8A0QD9BiEB0QA+ARAA0QDtBycByQFaAC0BoQCnCDUB4QAmAgYA0QDV
BjkBWQGPAQYASQH7Az8BWQEgAgYAKQFsCAEA6QBrBHkA6QASBkUBQQFSCEoB6QDNAHkA6QDCAHkA
6QBDAlAB6QCjAHkAcQD9BgYA2QD9BgYA4QEeAVYB4QHnCF8B+QD9BmUBGQH9BgYAKQBzAN8BLgAL
ALcBLgATAMABLgAbAN8BLgAjAOgBLgArABECLgAzABECLgA7ABECLgBDAOgBLgBLABcCLgBTABEC
LgBbAC4CQwBjAHYCSQBzAN8BYQB7AHYCYwBrAHYCHAADAAEABAADAAAAiganAQAAvgGsAQAAZAiy
AQIABAADAAIABQAFAAEABgAFAAIABwAHAASAAAABAAAAgRoIegAAAAAAAAAEAAAEAAAAAAAAAAAA
AABtAVEAAAAAAAwAAAAAAAAAAAAAAHYBeAQAAAAABAAAAAAAAAAAAAAAbQEzAAAAAAAEAAAAAAAA
AAAAAABtAR4FAAAAAAwAAAAAAAAAAAAAAHYBFAAAAAAAAAAAAAEAAABOBwAAAAAAAAA8TW9kdWxl
PgBTeXN0ZW0uSU8ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAFN5c3RlbS5EYXRhAFN5
c3RlbS5EYXRhLk9sZURiAG1zY29ybGliAEFkZABPbGVEYlNjaGVtYUd1aWQAT2xlRGJDb21tYW5k
AENyZWF0ZUNvbW1hbmQAU3FsQ29tbWFuZABBcHBlbmQAUmVwbGFjZQBnZXRfU3RhY2tUcmFjZQBk
ZWZhdWx0SW5zdGFuY2UAZ2V0X1NvdXJjZQBnZXRfTWVzc2FnZQBHZXRPbGVEYlNjaGVtYVRhYmxl
AERhdGFUYWJsZQBWYXJpYWJsZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBl
RnJvbUhhbmRsZQBGaWxlAGdldF9OYW1lAHNldF9EZXN0aW5hdGlvblRhYmxlTmFtZQBnZXRfQ29s
dW1uTmFtZQBEYXRlVGltZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFdyaXRlTGlu
ZQBUeXBlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBNZXRob2RCYXNl
AFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBJbnRlcm5hbERhdGFDb2xsZWN0aW9uQmFzZQBB
cHBsaWNhdGlvblNldHRpbmdzQmFzZQBDbG9zZQBEaXNwb3NlAEVkaXRvckJyb3dzYWJsZVN0YXRl
AGdldF9UYXJnZXRTaXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNl
ckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1
dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJn
ZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2Vt
Ymx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBB
c3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1Nj
cmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50
aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRfVmFsdWUAdmFsdWUATW92ZQBTVF9jNmU3N2Nh
NTI0YjA0YzFmOWIzNWZkNWJhNGIyNzFiZgBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFNxbEJ1
bGtDb3B5Q29sdW1uTWFwcGluZwBUb1N0cmluZwBnZXRfTGVuZ3RoAGdldF9IZWxwTGluawBNaWNy
b3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3Mu
U2NyaXB0VGFzawBTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfYzZl
NzdjYTUyNGIwNGMxZjliMzVmZDViYTRiMjcxYmYuZGxsAEZpbGwAZ2V0X0l0ZW0AU3lzdGVtAHJl
c291cmNlTWFuAE9wZW4AU2NyaXB0TWFpbgBEYXRhQ29sdW1uAFN5c3RlbS5Db25maWd1cmF0aW9u
AFN5c3RlbS5HbG9iYWxpemF0aW9uAGdldF9UcmFuc2FjdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBT
cWxCdWxrQ29weUNvbHVtbk1hcHBpbmdDb2xsZWN0aW9uAERhdGFDb2x1bW5Db2xsZWN0aW9uAERh
dGFSb3dDb2xsZWN0aW9uAE9sZURiQ29ubmVjdGlvbgBBY3F1aXJlQ29ubmVjdGlvbgBTcWxDb25u
ZWN0aW9uAGdldF9Jbm5lckV4Y2VwdGlvbgBTeXN0ZW0uRGF0YS5Db21tb24ARmlsZUluZm8AQ3Vs
dHVyZUluZm8ARmlsZVN5c3RlbUluZm8ARGlyZWN0b3J5SW5mbwBFeGVjdXRlU2NhbGFyAFN0cmlu
Z0J1aWxkZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBDb25uZWN0aW9uTWFuYWdlcgBTdHJlYW1Xcml0
ZXIAVGV4dFdyaXRlcgBPbGVEYkRhdGFBZGFwdGVyAFdyaXRlVG9TZXJ2ZXIASUVudW1lcmF0b3IA
R2V0RW51bWVyYXRvcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50
aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF9jNmU3N2NhNTI0YjA0YzFm
OWIzNWZkNWJhNGIyNzFiZi5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5n
TW9kZXMAU1RfYzZlNzdjYTUyNGIwNGMxZjliMzVmZDViYTRiMjcxYmYuUHJvcGVydGllcwBUYWJs
ZXMAZ2V0X1ZhcmlhYmxlcwBHZXRGaWxlcwBnZXRfQ29sdW1uTWFwcGluZ3MAU2V0dGluZ3MAQ29u
dGFpbnMAZ2V0X0NvbHVtbnMAU3lzdGVtLkNvbGxlY3Rpb25zAGdldF9Db25uZWN0aW9ucwBnZXRf
RHRzAGdldF9Sb3dzAENvbmNhdABPYmplY3QAZ2V0X0RlZmF1bHQAc2V0X1Rhc2tSZXN1bHQAU3lz
dGVtLkRhdGEuU3FsQ2xpZW50AGdldF9DdXJyZW50AGdldF9Db3VudABNb3ZlTmV4dABTeXN0ZW0u
VGV4dABzZXRfQ29tbWFuZFRleHQAQ3JlYXRlVGV4dABnZXRfTm93AERhdGFSb3cAZ2V0X0Fzc2Vt
Ymx5AFNxbEJ1bGtDb3B5AEV4ZWN1dGVOb25RdWVyeQAAQVUAcwBlAHIAOgA6AFIAZQBwAG8AcAB1
AGwAYQB0AGUAUwBvAHUAcgBjAGUARgBvAGwAZABlAHIAUABhAHQAaAAAIVUAcwBlAHIAOgA6AFMA
YwBoAGUAbQBhAE4AYQBtAGUAAC1VAHMAZQByADoAOgBCAGEAYwBrAFUAcABTAGMAaABlAG0AYQBO
AGEAbQBlAAAhUwB5AHMAdABlAG0AOgA6AFUAcwBlAHIATgBhAG0AZQAAL1UAcwBlAHIAOgA6AEEA
cgBjAGgAaQB2AGUARgBvAGwAZABlAHIAUABhAHQAaAAAJ1MAeQBzAHQAZQBtADoAOgBQAGEAYwBr
AGEAZwBlAE4AYQBtAGUAACdVAHMAZQByADoAOgBMAG8AZwBGAG8AbABkAGUAcgBQAGEAdABoAAAB
AB15AHkAeQB5AE0ATQBkAGQASABIAG0AbQBzAHMAAANcAAAFXwAkAAAJLgBsAG8AZwAAHVQAaABl
ACAAcABhAGMAawBhAGcAZQAgAC0AIAABOywAIABpAHMAIAB3AG8AcgBrAGkAbgBnACAAbwBuACAA
dABoAGUAIABmAG8AbABkAGUAcgAgAC0AIAABCy4AeABsAHMAeAAACS4AeABsAHMAAF1QAHIAbwB2
AGkAZABlAHIAPQBNAGkAYwByAG8AcwBvAGYAdAAuAEEAQwBFAC4ATwBMAEUARABCAC4AMQAyAC4A
MAA7AEQAYQB0AGEAIABTAG8AdQByAGMAZQA9AABhOwBFAHgAdABlAG4AZABlAGQAIABQAHIAbwBw
AGUAcgB0AGkAZQBzAD0AIgBFAHgAYwBlAGwAIAAxADIALgAwADsASABEAFIAPQBZAEUAUwA7AEkA
TQBFAFgAPQAxACIAACtUAGgAZQAgAGMAdQByAHIAZQBuAHQAIABmAGkAbABlACAAaQBzADoAIAAA
FVQAQQBCAEwARQBfAE4AQQBNAEUAAB9fAEYAaQBsAHQAZQByAEQAYQB0AGEAYgBhAHMAZQAAAyQA
AC1UAGgAZQAgAGMAdQByAHIAZQBuAHQAIABzAGgAZQBlAHQAIABpAHMAOgAgAAAfTwBMAEUARABC
AEMAbwBuAG4AZQBjAHQAaQBvAG4AAHNTAEUATABFAEMAVAAgACoAIABGAFIATwBNACAAcwB5AHMA
LgBvAGIAagBlAGMAdABzACAAVwBIAEUAUgBFACAAbwBiAGoAZQBjAHQAXwBpAGQAIAA9ACAATwBC
AEoARQBDAFQAXwBJAEQAKABOACcAWwABB10ALgBbAAAvXQAnACkAIAAgAEEATgBEACAAdAB5AHAA
ZQAgAGkAbgAgACgATgAnAFUAJwApAAEfLQAtAD4AIABUAGgAZQAgAHQAYQBiAGwAZQAgAFsAASNd
ACAAYQBsAHIAZQBhAGQAeQAgAGUAeABpAHMAdABzACEAAG1JAEYAKABOAE8AVAAgAEUAWABJAFMA
VABTACgAUwBFAEwARQBDAFQAIAAqACAARgBSAE8ATQAgAHMAeQBzAC4AcwBjAGgAZQBtAGEAcwAg
AFcASABFAFIARQAgAG4AYQBtAGUAIAA9ACAAJwABCScAKQApACAAATdCAEUARwBJAE4AIABFAFgA
RQBDACgAJwBDAFIARQBBAFQARQAgAFMAQwBIAEUATQBBACAAWwABI10AIABBAFUAVABIAE8AUgBJ
AFoAQQBUAEkATwBOACAAWwAAEV0AJwApACAARQBOAEQAIAABH1MARQBMAEUAQwBUACAAKgAgAEkA
TgBUAE8AIABbAAARXQAgAEYAUgBPAE0AIABbAAAHXQA7ACAAABtEAEUATABFAFQARQAgAEYAUgBP
AE0AIABbAAArcwBlAGwAZQBjAHQAIAB0AG8AcAAgADEAIAAqACAAZgByAG8AbQAgAFsAAAUkAF0A
AAMnAAEFJwAsAAFVYgApACAAQQBjAHQAdQBhAGwAIABjAG8AbAB1AG0AbgBzACAAaQBuACAAYwB1
AHIAcgBlAG4AdAAgAGUAeABjAGUAbAAgAHMAaABlAGUAdAA6ACAAAIC7UwBFAEwARQBDAFQAIABT
AFQAVQBGAEYAKAAoAFMARQBMAEUAQwBUACAAIAAnACwAWwAnACsAQwBvAGwAdQBtAG4AXwBOAGEA
bQBlACsAJwBdACcAIABGAFIATwBNACAASQBuAGYAbwByAG0AYQB0AGkAbwBuAF8AcwBjAGgAZQBt
AGEALgBDAG8AbAB1AG0AbgBzACAAVwBIAEUAUgBFACAAVABhAGIAbABlAF8ATgBhAG0AZQA9ACcA
ASknACAAQQBOAEQAIABUAGEAYgBsAGUAXwBTAEMAaABlAG0AYQA9ACcAASsnAEEATgBEACAAQwBv
AGwAdQBtAG4AXwBOAGEAbQBlACAASQBOACAAKAABUykAIABmAG8AcgAgAHgAbQBsACAAcABhAHQA
aAAoACcAJwApACkALAAxACwAMQAsACcAJwApACAAQQBTACAAQwBvAGwAdQBtAG4ATABpAHMAdAAB
W2MAKQAgAE0AYQB0AGMAaABpAG4AZwAgAGMAbwBsAHUAbQBuAHMAIAB3AGkAdABoACAAdABoAGUA
IABlAHgAaQBzAHQAaQBuAGcAIAB0AGEAYgBsAGUAOgAgAABbLQAtAD4AIABFAHgAaQBzAHQAaQBu
AGcAIAB0AGEAYgBsAGUAIABpAHMAIABjAG8AcABpAGUAZAAgAHQAbwAgAHQAaABlACAAcwBjAGgA
ZQBtAGEAIAAtACAAAXEtAC0APgAgAEUAeABpAHMAdABpAG4AZwAgAHQAYQBiAGwAZQAnAHMAIABk
AGEAdABhACAAYQByAGUAIABkAGUAbABlAHQAZQBkACAAZgByAG8AbQAgAHQAaABlACAAcwBjAGgA
ZQBtAGEAIAAtACAAAQ9zAGUAbABlAGMAdAAgAAAPIABmAHIAbwBtACAAWwAAAy4AAH8tAC0APgAg
AEEAbABsACAAdABoAGUAIAByAG8AdwBzACAAdQBuAGQAZQByACAAYQBiAG8AdgBlACAAbQBlAG4A
dABpAG8AbgBlAGQAIABjAG8AbAB1AG0AbgBzACwAIABmAHIAbwBtACAAdABoAGUAIABzAGgAZQBl
AHQAIAABOSwAIAB3AGUAcgBlACAAYwBvAHAAaQBlAGQAIAB0AG8AIAB0AGgAZQAgAHQAYQBiAGwA
ZQAgAFsAAANdAABXYQApACAAVABoAGUAIAB0AGEAYgBsAGUAIABkAG8AZQBzAG4AJwB0ACAAZQB4
AGkAcwB0ACAAaQBuACAAdABoAGUAIABzAGMAaABlAG0AYQAgAC0AIAABH3MAZQBsAGUAYwB0ACAA
KgAgAGYAcgBvAG0AIABbAAAdQwByAGUAYQB0AGUAIAB0AGEAYgBsAGUAIABbAAADKAAAA1sAACFd
ACAAbgB2AGEAcgBjAGgAYQByACgAbQBhAHgAKQAsAAAfXQAgAG4AdgBhAHIAYwBoAGEAcgAoAG0A
YQB4ACkAAAUpADsAAICLLQAtAD4AIABBACAAbgBlAHcAIAB0AGEAYgBsAGUAIABpAHMAIABjAHIA
ZQBhAHQAZQBkACAAdwBpAHQAaAAgAGEAbABsACAAaQB0ACcAcwAgAGMAbwBsAHUAbQBuAHMAIABh
AHMAIABuAHYAYQByAGMAaABhAHIAKABtAGEAeAApACAALQAgAFsAAUUtAC0APgAgAEEAbABsACAA
dABoAGUAIAByAG8AdwBzACAAZgByAG8AbQAgAHQAaABlACAAcwBoAGUAZQB0ACAALQAgAAE7LAAg
AGEAcgBlACAAYwBvAHAAaQBlAGQAIAB0AG8AIAB0AGgAZQAgAHQAYQBiAGwAZQAgAC0AIABbAAEx
VQBzAGUAcgA6ADoARQByAHIAbwByAEwAbwBnAEYAbwBsAGQAZQByAFAAYQB0AGgAABVcAEUAcgBy
AG8AcgBMAG8AZwBfAAA9SABlAGwAcAAgAGwAaQBuAGsAIABmAG8AcgAgAHQAaABpAHMAIABlAHgA
YwBlAHAAdABpAG8AbgA6ACAAACdQAHIAaQBtAGEAcgB5ACAAZQB4AGMAZQBwAHQAaQBvAG4AOgAg
AAAnRQB4AGMAZQBwAHQAaQBvAG4AIABNAGUAcwBzAGEAZwBlADoAIAAAHUUAcgByAG8AcgAgAFMA
bwB1AHIAYwBlADoAIAAAT0MAdQByAHIAZQBuAHQAIABtAGUAdABoAG8AZAAgAHcAaABpAGMAaAAg
AHQAaAByAG8AdwBzACAAZQB4AGMAZQBwAHQAaQBvAG4AOgAgAAA/QwBvAGQAZQAgAHQAcgBhAGMA
ZQAgAGEAdAAgAHQAaABlACAAZQByAHIAbwByACAAcABvAGkAbgB0ADoAIAAAcVMAVABfAGMANgBl
ADcANwBjAGEANQAyADQAYgAwADQAYwAxAGYAOQBiADMANQBmAGQANQBiAGEANABiADIANwAxAGIA
ZgAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAAAA9pj4mHc9XkKS
xNLrCeyZTgAEIAEBCAMgAAEFIAEBEREEIAEBDgYgAQERgIVFByoODg4ODg4OEj0dEkEODg4SRRFJ
HRJBCBJBEk0OElESVRJZEl0ODhJhEmUSYQgODhJlEmkSURwScRJlEmEIEmkSdRJFBSAAEoCVBSAA
EoCZBiABEoCdHAMgABwDIAAOBSAAHRJBBAAAEUkEIAEODgUAAQ4dDgUAARJFDgcABA4ODg4OBCAB
Ag4FIAIODg4GAAMODg4OBAYRgLkJIAISZRGAuR0cBQACDg4OBSAAEoC9BCAAElEEIAEcDgUgABKA
xQYgARKAyRwEIAEcHAQgABJdAyAACAUgARJhDgYgAgEOEk0GIAEBEoDRBSABCBJlBSAAEoDdBiAB
EoDhCAYgAgEOElkFIAEBElkFIAASgOUHIAISgOkODgMgAAIFIAEBEmUFAAIBDg4EIAASdQUAAg4c
HAUgABKA7QgAARKA8RGA9QUgABKA+QcgAgEOEoD5CLd6XFYZNOCJCImEXc2AgMyRAwYSfQQGEoCB
AwYSEAQAABJ9BQAAEoCBBgABARKAgQQAABIQAwAAAQQIABJ9BQgAEoCBBAgAEhAIAQAIAAAAAAAe
AQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUX2M2ZTc3Y2E1MjRi
MDRjMWY5YjM1ZmQ1YmE0YjI3MWJmAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTgAAEcBABou
TkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBG
cmFtZXdvcmsgNAQBAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJj
ZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJs
aWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291
cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABcTAAAAAAAAAAAAAB2TAAAACAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAaEwAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUA
IAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAYAACA
AAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAABoEAAAA
AAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAABAAAA
AQAIeoEaAAABAAh6gRo/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIARgBp
AGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsAR6AwAA
AQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAwADAANABiADAAAAAa
AAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAA
AAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfAGMANgBl
ADcANwBjAGEANQAyADQAYgAwADQAYwAxAGYAOQBiADMANQBmAGQANQBiAGEANABiADIANwAxAGIA
ZgAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA2ADcAOAA1AC4AMwAx
ADIANAAwAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfAGMANgBlADcA
NwBjAGEANQAyADQAYgAwADQAYwAxAGYAOQBiADMANQBmAGQANQBiAGEANABiADIANwAxAGIAZgAu
AGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkA
ZwBoAHQAIABAACAAIAAyADAAMQA4AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBr
AHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBUAF8A
YwA2AGUANwA3AGMAYQA1ADIANABiADAANABjADEAZgA5AGIAMwA1AGYAZAA1AGIAYQA0AGIAMgA3
ADEAYgBmAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAVABfAGMA
NgBlADcANwBjAGEANQAyADQAYgAwADQAYwAxAGYAOQBiADMANQBmAGQANQBiAGEANABiADIANwAx
AGIAZgAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgA3ADgA
NQAuADMAMQAyADQAMAAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANgA3ADgANQAuADMAMQAyADQAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAACIPAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql12">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="131,42"
          Id="Package\Script Task"
          TopLeft="326,90" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>